<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <DatagraphCoreV1 />
    <_.fcp.DatagraphNodeAxisTitle.true...DatagraphNodeAxisTitle />
    <DatagraphNodeDashboardZoneVisibilityV1 />
    <DatagraphNodeSingleValueFieldV1 />
    <ISO8601DefaultCalendarPref />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <ParameterAction />
    <ParameterActionClearSelection />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneVisibilityControl />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='selected dot chart' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;not_null&quot;'>
        <calculation class='tableau' formula='&quot;not_null&quot;' />
        <members>
          <member value='&quot;not_null&quot;' />
          <member value='&quot;null&quot;' />
        </members>
      </column>
      <column caption='Convert Unit' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;°C&quot;'>
        <calculation class='tableau' formula='&quot;°C&quot;' />
        <members>
          <member value='&quot;°F&quot;' />
          <member value='&quot;°C&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='weather_data' inline='true' name='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n' version='18.1'>
      <repository-location id='weather_data_17363629761520' path='/t/leluudev/datasources' revision='2.9' site='leluudev' />
      <connection channel='https' class='sqlproxy' dbname='weather_data_17363629761520' directory='/dataserver' local-dataserver='' port='443' server='10ax.online.tableau.com' username=''>
        <relation name='sqlproxy' table='[sqlproxy]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='measure'>
            <remote-name>Number of Records</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>5</ordinal>
            <layered>true</layered>
            <caption>Number of Records</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
              <attribute datatype='string' name='formula'>&quot;1&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>temperature_2m</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature_2m]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>temperature_2m</remote-alias>
            <ordinal>1</ordinal>
            <layered>true</layered>
            <family>Weather_Dataset</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <object-id>[Weather_Dataset_DF5ACDBB5363411EBDC40EAFD77B1CFD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>0</ordinal>
            <layered>true</layered>
            <family>Weather_Dataset</family>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>1</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <object-id>[Weather_Dataset_DF5ACDBB5363411EBDC40EAFD77B1CFD]</object-id>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='boolean' name='CAP_CREATE_TEMP_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES'>false</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_CASE_INSENSITIVE_CONTAINS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_IGNORE_HINT_CHECK_NOT_NULL'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SORT_BY'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUBQUERIES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUPPORTS_LODJOINS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUPPORT_ANALYTIC_FUNCTIONS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_TOP_N'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_USE_QUERY_FUSION'>true</attribute>
              <attribute datatype='boolean' name='CAP_SUPPORTS_SPLIT_FROM_LEFT'>true</attribute>
              <attribute datatype='boolean' name='CAP_SUPPORTS_SPLIT_FROM_RIGHT'>true</attribute>
              <attribute datatype='integer' name='charset'>0</attribute>
              <attribute datatype='string' name='collation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='datasource'>&quot;<![CDATA[<?xml version='1.0' encoding='utf-8' ?>

<datasource :source-version='18.1' formatted-name='weather_data' inline='true' version='18.1' xml:base='https://10ax.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
  </document-format-change-manifest>
  <repository-location id='weather_data_17363629761520' path='/t/leluudev/datasources' revision='2.9' site='leluudev' />
  <connection :databaseVariables='' channel='https' class='sqlproxy' dbname='weather_data_17363629761520' local-dataserver='' port='443' server='10ax.online.tableau.com'>
    <relation name='sqlproxy' table='[sqlproxy]' type='table' />
    <cols>
      <map key='[Number of Records]' value='[sqlproxy].[Number of Records]' />
      <map key='[temperature_2m]' value='[sqlproxy].[temperature_2m]' />
      <map key='[time]' value='[sqlproxy].[time]' />
    </cols>
  </connection>
  <aliases enabled='yes' />
  <column aggregation='Sum' datatype='integer' default-type='quantitative' name='[Number of Records]' pivot='key' role='measure' type='quantitative' user-datatype='integer' user:auto-column='numrec' visual-totals='Default'>
    <calculation class='tableau' formula='1' />
  </column>
  <column aggregation='Count' caption='Weather_Dataset' datatype='table' default-type='quantitative' name='[__tableau_internal_object_id__].[Weather_Dataset_DF5ACDBB5363411EBDC40EAFD77B1CFD]' pivot='key' role='measure' type='quantitative' user-datatype='table' visual-totals='Default' />
  <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
  <object-graph>
    <objects>
      <object caption='Weather_Dataset' id='Weather_Dataset_DF5ACDBB5363411EBDC40EAFD77B1CFD'>
        <properties context=''>
          <relation name='sqlproxy' table='[sqlproxy]' type='table' />
        </properties>
      </object>
    </objects>
  </object-graph>
</datasource>
]]>&quot;</attribute>
              <attribute datatype='string' name='dialect-definition'>&quot;<![CDATA[<dialect-definition>
  <primary-dialect class='hyper' version='0.0.0'>
  </primary-dialect>
  <overlay-dialect-set>
    <overlay-dialect class='vizengine' version='0.1.0'>
    </overlay-dialect>
  </overlay-dialect-set>
</dialect-definition>
]]>&quot;</attribute>
              <attribute datatype='boolean' name='extract-active'>false</attribute>
              <attribute datatype='boolean' name='fast-get-server-time'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <overridable-settings>
        <date-options fiscal-year-start='january' start-of-week='sunday' />
        <default-date-format />
        <default-calendar-type>Gregorian</default-calendar-type>
      </overridable-settings>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:temperature_2m:qk]&quot;' value='Actual Temp' />
          <alias key='&quot;[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:temp_pred (copy)_1119988970922901505:qk:2]&quot;' value='Predicted Temp' />
        </aliases>
      </column>
      <column caption='AVG temp by day' datatype='real' name='[Calculation_1119988970994573315]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN &#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN [temperature_2m] END)}&#13;&#10;ELSE&#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN ([temperature_2m]-32)/1.8 END)}&#13;&#10;END' />
      </column>
      <column caption='temp_check_not_null' datatype='boolean' name='[Calculation_1119988971001151498]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REGEXP_MATCH(STR([temperature_2m]),&apos;[\d+\.\d+|\d+]&apos;)' />
      </column>
      <column caption='color' datatype='string' name='[Calculation_1119988971004014603]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1119988971001151498]= FALSE&#13;&#10;THEN &apos;no&apos;&#13;&#10;ELSE (&#13;&#10;        CASE [Parameters].[Parameter 2]&#13;&#10;        WHEN &apos;°F&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315]&gt;=80 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 70 and [Calculation_1119988970994573315]&lt;80 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 60 and [Calculation_1119988970994573315]&lt;70 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=50 and [Calculation_1119988970994573315]&lt;60 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=40 and [Calculation_1119988970994573315]&lt;50 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=30 and [Calculation_1119988970994573315]&lt;40 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=20 AND [Calculation_1119988970994573315]&lt;30 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        WHEN &apos;°C&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315] &gt;= 26.67 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 21.11 AND [Calculation_1119988970994573315] &lt; 26.67 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 15.56 AND [Calculation_1119988970994573315] &lt; 21.11 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 10 AND [Calculation_1119988970994573315] &lt; 15.56 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 4.44 AND [Calculation_1119988970994573315] &lt; 10 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -1.11 AND [Calculation_1119988970994573315] &lt; 4.44 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -6.67 AND [Calculation_1119988970994573315] &lt; -1.11 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        END&#13;&#10;      )&#13;&#10;END' />
        <aliases>
          <alias key='&quot;c&quot;' value='Freezing' />
          <alias key='&quot;cc&quot;' value='Very Cold' />
          <alias key='&quot;ccc&quot;' value='Chilly' />
          <alias key='&quot;h&quot;' value='Warm' />
          <alias key='&quot;hh&quot;' value='Very Warm' />
          <alias key='&quot;hhh&quot;' value='Hot' />
          <alias key='&quot;n&quot;' value='Neutral Cool' />
          <alias key='&quot;nn&quot;' value='Mild' />
          <alias key='&quot;no&quot;' value='No Data' />
        </aliases>
      </column>
      <column caption='DZV_Not_Null' datatype='boolean' name='[Calculation_1119988971016626193]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]=&apos;not_null&apos;' />
      </column>
      <column caption='selected color' datatype='boolean' name='[Calculation_1119988971020165139]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1119988971004014603]=&apos;no&apos;' />
      </column>
      <column caption='Check null/not null' datatype='string' name='[Calculation_926897137295949824]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1119988971001151498] THEN &apos;not_null&apos; ELSE &apos;null&apos;END' />
      </column>
      <column caption='Start End Date' datatype='date' datatype-customized='true' name='[Calculation_926897137305153538]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyyMMdd&quot;, STR(MIN([time (Month / Day / Year)])) ))' />
      </column>
      <column caption='Predicted Date' datatype='date' datatype-customized='true' name='[Calculation_926897137306824707]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyyMMdd&quot;, STR(IF [Calculation_926897137295949824] = &apos;null&apos; &#13;&#10;THEN [time (Month / Day / Year)]&#13;&#10;END) ))' />
      </column>
      <column caption='highlight' datatype='string' name='[Calculation_926897137331421217]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;highlight&quot;' />
      </column>
      <column caption='Unit ' datatype='string' name='[Calculation_926897137332920355]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
      </column>
      <column caption='Actual Temp ' datatype='real' name='[Calculation_926897137335107620]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN [temperature_2m]&#13;&#10;WHEN &apos;°C&apos; THEN ([temperature_2m]-32)/1.8&#13;&#10;END' />
      </column>
      <column caption='Predicted Temp' datatype='real' name='[Calculation_926897137335386149]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN [temp_pred (copy)_1119988970922901505]&#13;&#10;WHEN &apos;°C&apos; THEN ([temp_pred (copy)_1119988970922901505]-32)/1.8&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='DZV_Null' datatype='boolean' name='[DZV_Not_Null (copy)_1119988971016970258]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]=&apos;null&apos;' />
      </column>
      <column aggregation='Sum' datatype='integer' default-type='quantitative' layered='true' name='[Number of Records]' pivot='key' role='measure' type='quantitative' user-datatype='integer' user:auto-column='numrec' visual-totals='Default'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Count' caption='Weather_Dataset' datatype='table' default-type='quantitative' layered='true' name='[__tableau_internal_object_id__].[Weather_Dataset_DF5ACDBB5363411EBDC40EAFD77B1CFD]' pivot='key' role='measure' type='quantitative' user-datatype='table' visual-totals='Default' />
      <column caption='temp_pred_new_test' datatype='real' name='[temp_pred (copy)_1119988970922901505]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;return tabpy.query(&apos;forcast_temperature_new_test&apos;,_arg1)[&apos;response&apos;]&#13;&#10;&quot;,MIN([time]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[temperature_2m]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='integer' name='[time (Month / Day / Year)]' role='dimension' type='ordinal' user:agg-type='MDY' user:base-field='time' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*10000 + DATEPART(&apos;month&apos;, [time])*100 + DATEPART(&apos;day&apos;, [time]))' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[time (Month / Year)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='time' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*100 + DATEPART(&apos;month&apos;, [time]))' />
      </column>
      <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[time]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
      <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1119988971004014603]' derivation='None' name='[none:Calculation_1119988971004014603:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_926897137335107620]' derivation='Sum' name='[sum:Calculation_926897137335107620:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temperature_2m]' derivation='Sum' name='[sum:temperature_2m:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_926897137335386149]' derivation='User' name='[usr:Calculation_926897137335386149:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[temp_pred (copy)_1119988970922901505]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[temp_pred (copy)_1119988970922901505]' derivation='User' name='[usr:temp_pred (copy)_1119988970922901505:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[time]' derivation='Weekday' name='[wd:time:ok]' pivot='key' type='ordinal' />
      <column-instance column='[time]' derivation='Week' name='[wk:time:ok]' pivot='key' type='ordinal' />
      <group caption='Action (DZV_Not_Null)' hidden='true' name='[Action (DZV_Not_Null)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1119988971016626193]' />
        </groupfilter>
      </group>
      <group caption='Action (DZV_Null)' hidden='true' name='[Action (DZV_Null)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[DZV_Not_Null (copy)_1119988971016970258]' />
        </groupfilter>
      </group>
      <group caption='Action (WEEK(time),WEEKDAY(time))' hidden='true' name='[Action (WEEK(time),WEEKDAY(time))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[wk:time:ok]' />
          <groupfilter function='level-members' level='[wd:time:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (color,DAY(time),WEEK(time),WEEKDAY(time))' hidden='true' name='[Action (color,DAY(time),WEEK(time),WEEKDAY(time))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1119988971004014603]' />
          <groupfilter function='level-members' level='[dy:time:ok]' />
          <groupfilter function='level-members' level='[wk:time:ok]' />
          <groupfilter function='level-members' level='[wd:time:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (color,highlight,Unit ,time (Month / Day / Year),DAY(time),WEEK(time),WEEKDAY(time))' hidden='true' name='[Action (color,highlight,Unit ,time (Month / Day / Year),DAY(time),WEEK(time),WEEKDAY(time))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1119988971004014603]' />
          <groupfilter function='level-members' level='[Calculation_926897137331421217]' />
          <groupfilter function='level-members' level='[Calculation_926897137332920355]' />
          <groupfilter function='level-members' level='[time (Month / Day / Year)]' />
          <groupfilter function='level-members' level='[dy:time:ok]' />
          <groupfilter function='level-members' level='[wk:time:ok]' />
          <groupfilter function='level-members' level='[wd:time:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (color,selected color,DAY(time),WEEK(time),WEEKDAY(time))' hidden='true' name='[Action (color,selected color,DAY(time),WEEK(time),WEEKDAY(time))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1119988971004014603]' />
          <groupfilter function='level-members' level='[Calculation_1119988971020165139]' />
          <groupfilter function='level-members' level='[dy:time:ok]' />
          <groupfilter function='level-members' level='[wk:time:ok]' />
          <groupfilter function='level-members' level='[wd:time:ok]' />
        </groupfilter>
      </group>
      <group caption='time (Month / Year) Set' name='[time (Month / Year) Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[time (Month / Year)]' member='202201' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202202' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202203' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202204' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202205' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202206' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202207' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202208' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202209' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202210' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202211' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202212' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202301' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202302' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202303' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202304' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202305' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202306' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202307' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202308' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202309' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202310' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202311' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202312' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202401' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202402' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202403' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202404' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202405' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202406' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202407' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202408' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202409' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202410' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202411' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202412' />
          <groupfilter function='member' level='[time (Month / Year)]' member='202501' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1119988971004014603:nk]' type='palette'>
            <map to='#1780a1'>
              <bucket>&quot;cc&quot;</bucket>
            </map>
            <map to='#455e89'>
              <bucket>&quot;c&quot;</bucket>
            </map>
            <map to='#5c4d7d'>
              <bucket>&quot;h&quot;</bucket>
            </map>
            <map to='#73d2de'>
              <bucket>&quot;ccc&quot;</bucket>
            </map>
            <map to='#892b64'>
              <bucket>&quot;hh&quot;</bucket>
            </map>
            <map to='#b7094c'>
              <bucket>&quot;hhh&quot;</bucket>
            </map>
            <map to='#dae3e8'>
              <bucket>&quot;no&quot;</bucket>
            </map>
            <map to='#efefd0'>
              <bucket>&quot;n&quot;</bucket>
            </map>
            <map to='#f7c59f'>
              <bucket>&quot;nn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#25a18e'>
              <bucket>&quot;[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:temperature_2m:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]&quot;</bucket>
            </map>
            <map to='#99c1b9'>
              <bucket>&quot;[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk]&quot;</bucket>
            </map>
            <map to='#d88c9a'>
              <bucket>&quot;[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]&quot;</bucket>
            </map>
            <map to='#f79256'>
              <bucket>&quot;[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:temp_pred (copy)_1119988970922901505:qk:2]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='selected dot chart' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;not_null&quot;'>
          <calculation class='tableau' formula='&quot;not_null&quot;' />
        </column>
        <column caption='Convert Unit' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;°C&quot;'>
          <calculation class='tableau' formula='&quot;°C&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Weather_Dataset' id='Weather_Dataset_DF5ACDBB5363411EBDC40EAFD77B1CFD'>
            <properties context=''>
              <relation name='sqlproxy' table='[sqlproxy]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter Dot Plot' name='[Action2_3943668F9B224BCCBABF43B5A164CCC2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Temp Forecast' type='sheet' worksheet='Calendar' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Calendar' />
        <param name='special-fields' value='all' />
        <param name='target' value='Temp Forecast' />
      </command>
    </action>
    <action caption='Remove Highlight Calendar' name='[Action3_2C2DA69B475343BF81BC40C56C283EA8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Temp Forecast' type='sheet' worksheet='Calendar' />
      <command command='tsc:brush'>
        <param name='exclude' value='incl_null,not_null,Sheet 7' />
        <param name='field-captions' value='highlight' />
        <param name='target' value='Temp Forecast' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action4_7266CC00001D44ADB59B0F81451AAF21]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Calendar' />
      <command command='tsc:brush'>
        <param name='field-captions' value='highlight' />
        <param name='target' value='Calendar' />
      </command>
    </action>
    <edit-parameter-action caption='Update Parameter' name='[Action3_C5ED937B27504C45A058E856BF28E77D]'>
      <activation type='on-select' />
      <source dashboard='Temp Forecast' type='sheet' worksheet='Calendar' />
      <agg-type type='attr' />
      <clear-option type='do-nothing' value='s:LROOT:' />
      <params>
        <param name='source-field' value='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[attr:Calculation_926897137295949824:nk]' />
        <param name='target-parameter' value='[Parameters].[Parameter 1]' />
      </params>
    </edit-parameter-action>
  </actions>
  <worksheets>
    <worksheet name='Calendar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='12'>AVG Temperature Daily in &lt;</run>
            <run bold='true' fontcolor='#000000' fontsize='12'>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year)]</run>
            <run bold='true' fontcolor='#000000' fontsize='12'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data' name='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Convert Unit' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;°C&quot;'>
              <calculation class='tableau' formula='&quot;°C&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n'>
            <column caption='AVG temp by day' datatype='real' name='[Calculation_1119988970994573315]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN &#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN [temperature_2m] END)}&#13;&#10;ELSE&#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN ([temperature_2m]-32)/1.8 END)}&#13;&#10;END' />
            </column>
            <column caption='temp_check_not_null' datatype='boolean' name='[Calculation_1119988971001151498]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_MATCH(STR([temperature_2m]),&apos;[\d+\.\d+|\d+]&apos;)' />
            </column>
            <column caption='color' datatype='string' name='[Calculation_1119988971004014603]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1119988971001151498]= FALSE&#13;&#10;THEN &apos;no&apos;&#13;&#10;ELSE (&#13;&#10;        CASE [Parameters].[Parameter 2]&#13;&#10;        WHEN &apos;°F&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315]&gt;=80 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 70 and [Calculation_1119988970994573315]&lt;80 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 60 and [Calculation_1119988970994573315]&lt;70 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=50 and [Calculation_1119988970994573315]&lt;60 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=40 and [Calculation_1119988970994573315]&lt;50 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=30 and [Calculation_1119988970994573315]&lt;40 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=20 AND [Calculation_1119988970994573315]&lt;30 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        WHEN &apos;°C&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315] &gt;= 26.67 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 21.11 AND [Calculation_1119988970994573315] &lt; 26.67 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 15.56 AND [Calculation_1119988970994573315] &lt; 21.11 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 10 AND [Calculation_1119988970994573315] &lt; 15.56 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 4.44 AND [Calculation_1119988970994573315] &lt; 10 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -1.11 AND [Calculation_1119988970994573315] &lt; 4.44 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -6.67 AND [Calculation_1119988970994573315] &lt; -1.11 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        END&#13;&#10;      )&#13;&#10;END' />
              <aliases>
                <alias key='&quot;c&quot;' value='Freezing' />
                <alias key='&quot;cc&quot;' value='Very Cold' />
                <alias key='&quot;ccc&quot;' value='Chilly' />
                <alias key='&quot;h&quot;' value='Warm' />
                <alias key='&quot;hh&quot;' value='Very Warm' />
                <alias key='&quot;hhh&quot;' value='Hot' />
                <alias key='&quot;n&quot;' value='Neutral Cool' />
                <alias key='&quot;nn&quot;' value='Mild' />
                <alias key='&quot;no&quot;' value='No Data' />
              </aliases>
            </column>
            <column caption='Check null/not null' datatype='string' name='[Calculation_926897137295949824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1119988971001151498] THEN &apos;not_null&apos; ELSE &apos;null&apos;END' />
            </column>
            <column caption='0.5' datatype='real' name='[Calculation_926897137296936961]' role='measure' type='quantitative' user:unnamed='Calendar'>
              <calculation class='tableau' formula='0.5' />
            </column>
            <column caption='highlight' datatype='string' name='[Calculation_926897137331421217]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;highlight&quot;' />
            </column>
            <column caption='Unit ' datatype='string' name='[Calculation_926897137332920355]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column-instance column='[Calculation_926897137295949824]' derivation='Attribute' name='[attr:Calculation_926897137295949824:nk]' pivot='key' type='nominal' />
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1119988971004014603]' derivation='None' name='[none:Calculation_1119988971004014603:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_926897137331421217]' derivation='None' name='[none:Calculation_926897137331421217:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_926897137332920355]' derivation='None' name='[none:Calculation_926897137332920355:nk]' pivot='key' type='nominal' />
            <column-instance column='[time (Month / Day / Year)]' derivation='None' name='[none:time (Month / Day / Year):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1119988970994573315]' derivation='Sum' name='[sum:Calculation_1119988970994573315:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_926897137296936961]' derivation='Sum' name='[sum:Calculation_926897137296936961:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[temperature_2m]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='integer' name='[time (Month / Day / Year)]' role='dimension' type='ordinal' user:agg-type='MDY' user:base-field='time' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*10000 + DATEPART(&apos;month&apos;, [time])*100 + DATEPART(&apos;day&apos;, [time]))' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[time (Month / Year)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='time' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*100 + DATEPART(&apos;month&apos;, [time]))' />
            </column>
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[time]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
            <column-instance column='[time]' derivation='Weekday' name='[wd:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='Week' name='[wk:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ccc&quot;</bucket>
              <bucket>&quot;cc&quot;</bucket>
              <bucket>&quot;c&quot;</bucket>
              <bucket>&quot;n&quot;</bucket>
              <bucket>&quot;no&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]' context='true' filter-group='3'>
            <groupfilter function='member' level='[time (Month / Year)]' member='202501' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_1119988970994573315:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wd:time:ok]' value='17' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wk:time:ok]' value='false' />
            <format attr='text-format' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wd:time:ok]' value='ieee' />
            <format attr='color' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wd:time:ok]' value='#000000' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='font-size' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wd:time:ok]' value='8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137296936961:qk]' />
              <text column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[dy:time:ok]' />
              <text column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_1119988970994573315:qk]' />
              <text column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[attr:Calculation_926897137295949824:nk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137331421217:nk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time (Month / Day / Year):ok]' />
              <color column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[Date: <[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time (Month / Day / Year):ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[Temperature: <[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_1119988970994573315:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontalignment='2' fontsize='4'>Æ        </run>
                <run fontalignment='2'><![CDATA[
<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[dy:time:ok]>
 ]]></run>
                <run>Æ&#10;  </run>
                <run fontsize='8'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_1119988970994573315:qk]><[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.8790607452392578' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wk:time:ok]</rows>
        <cols>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wd:time:ok]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{E478E5BF-6860-49C3-96C2-D84848B9C23F}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data' name='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n' />
          </datasources>
          <datasource-dependencies datasource='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n'>
            <column-instance column='[temperature_2m]' derivation='None' name='[none:temperature_2m:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='None' name='[none:time:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[temperature_2m]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[time]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]' value='216' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]</rows>
        <cols>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:temperature_2m:qk]</cols>
      </table>
      <simple-id uuid='{19FECCFF-7248-4605-BA98-5DA7D7A8A187}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data' name='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Convert Unit' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;°C&quot;'>
              <calculation class='tableau' formula='&quot;°C&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n'>
            <column caption='AVG temp by day' datatype='real' name='[Calculation_1119988970994573315]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN &#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN [temperature_2m] END)}&#13;&#10;ELSE&#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN ([temperature_2m]-32)/1.8 END)}&#13;&#10;END' />
            </column>
            <column caption='temp_check_not_null' datatype='boolean' name='[Calculation_1119988971001151498]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_MATCH(STR([temperature_2m]),&apos;[\d+\.\d+|\d+]&apos;)' />
            </column>
            <column-instance column='[Calculation_1119988970994573315]' derivation='None' name='[none:Calculation_1119988970994573315:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1119988971001151498]' derivation='None' name='[none:Calculation_1119988971001151498:nk]' pivot='key' type='nominal' />
            <column-instance column='[temperature_2m]' derivation='None' name='[none:temperature_2m:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='None' name='[none:time:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[temperature_2m]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='integer' name='[time (Month / Year)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='time' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*100 + DATEPART(&apos;month&apos;, [time]))' />
            </column>
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[time]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]' context='true' filter-group='3'>
            <groupfilter function='member' level='[time (Month / Year)]' member='202501' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988970994573315:ok]' value='156' />
            <format attr='width' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:temperature_2m:ok]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok] / ([sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:temperature_2m:ok] / ([sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988970994573315:ok] / [sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971001151498:nk])))</rows>
        <cols />
      </table>
      <simple-id uuid='{080DA3FA-36B4-4E8F-9FA9-3223F186CCD2}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{42380BE2-D32C-4232-A4DF-29C2073D5016}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data' name='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Convert Unit' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;°C&quot;'>
              <calculation class='tableau' formula='&quot;°C&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n'>
            <column caption='AVG temp by day' datatype='real' name='[Calculation_1119988970994573315]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN &#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN [temperature_2m] END)}&#13;&#10;ELSE&#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN ([temperature_2m]-32)/1.8 END)}&#13;&#10;END' />
            </column>
            <column caption='temp_check_not_null' datatype='boolean' name='[Calculation_1119988971001151498]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_MATCH(STR([temperature_2m]),&apos;[\d+\.\d+|\d+]&apos;)' />
            </column>
            <column caption='color' datatype='string' name='[Calculation_1119988971004014603]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1119988971001151498]= FALSE&#13;&#10;THEN &apos;no&apos;&#13;&#10;ELSE (&#13;&#10;        CASE [Parameters].[Parameter 2]&#13;&#10;        WHEN &apos;°F&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315]&gt;=80 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 70 and [Calculation_1119988970994573315]&lt;80 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 60 and [Calculation_1119988970994573315]&lt;70 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=50 and [Calculation_1119988970994573315]&lt;60 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=40 and [Calculation_1119988970994573315]&lt;50 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=30 and [Calculation_1119988970994573315]&lt;40 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=20 AND [Calculation_1119988970994573315]&lt;30 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        WHEN &apos;°C&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315] &gt;= 26.67 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 21.11 AND [Calculation_1119988970994573315] &lt; 26.67 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 15.56 AND [Calculation_1119988970994573315] &lt; 21.11 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 10 AND [Calculation_1119988970994573315] &lt; 15.56 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 4.44 AND [Calculation_1119988970994573315] &lt; 10 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -1.11 AND [Calculation_1119988970994573315] &lt; 4.44 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -6.67 AND [Calculation_1119988970994573315] &lt; -1.11 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        END&#13;&#10;      )&#13;&#10;END' />
              <aliases>
                <alias key='&quot;c&quot;' value='Freezing' />
                <alias key='&quot;cc&quot;' value='Very Cold' />
                <alias key='&quot;ccc&quot;' value='Chilly' />
                <alias key='&quot;h&quot;' value='Warm' />
                <alias key='&quot;hh&quot;' value='Very Warm' />
                <alias key='&quot;hhh&quot;' value='Hot' />
                <alias key='&quot;n&quot;' value='Neutral Cool' />
                <alias key='&quot;nn&quot;' value='Mild' />
                <alias key='&quot;no&quot;' value='No Data' />
              </aliases>
            </column>
            <column caption='MAX(15)' datatype='integer' name='[Calculation_926897137322684447]' role='measure' type='quantitative' user:unnamed='Sheet 7'>
              <calculation class='tableau' formula='MAX(15)' />
            </column>
            <column caption='MIN(0.2)' datatype='real' name='[Calculation_926897137326551072]' role='measure' type='quantitative' user:unnamed='Sheet 7'>
              <calculation class='tableau' formula='MIN(0.2)' />
            </column>
            <column caption='highlight' datatype='string' name='[Calculation_926897137331421217]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;highlight&quot;' />
            </column>
            <column caption='Unit ' datatype='string' name='[Calculation_926897137332920355]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1119988971004014603]' derivation='None' name='[none:Calculation_1119988971004014603:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[temperature_2m]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='integer' name='[time (Month / Day / Year)]' role='dimension' type='ordinal' user:agg-type='MDY' user:base-field='time' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*10000 + DATEPART(&apos;month&apos;, [time])*100 + DATEPART(&apos;day&apos;, [time]))' />
            </column>
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[time]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
            <column-instance column='[Calculation_926897137322684447]' derivation='User' name='[usr:Calculation_926897137322684447:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_926897137326551072]' derivation='User' name='[usr:Calculation_926897137326551072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Weekday' name='[wd:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='Week' name='[wk:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,DAY(time),WEEK(time),WEEKDAY(time))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3943668F9B224BCCBABF43B5A164CCC2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1119988971004014603]' />
              <groupfilter function='level-members' level='[dy:time:ok]' />
              <groupfilter function='level-members' level='[wk:time:ok]' />
              <groupfilter function='level-members' level='[wd:time:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,highlight,Unit ,time (Month / Day / Year),DAY(time),WEEK(time),WEEKDAY(time))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3943668F9B224BCCBABF43B5A164CCC2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1119988971004014603]' />
              <groupfilter function='level-members' level='[Calculation_926897137331421217]' />
              <groupfilter function='level-members' level='[Calculation_926897137332920355]' />
              <groupfilter function='level-members' level='[time (Month / Day / Year)]' />
              <groupfilter function='level-members' level='[dy:time:ok]' />
              <groupfilter function='level-members' level='[wk:time:ok]' />
              <groupfilter function='level-members' level='[wd:time:ok]' />
            </groupfilter>
          </filter>
          <manual-sort column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;hhh&quot;</bucket>
              <bucket>&quot;hh&quot;</bucket>
              <bucket>&quot;h&quot;</bucket>
              <bucket>&quot;nn&quot;</bucket>
              <bucket>&quot;n&quot;</bucket>
              <bucket>&quot;ccc&quot;</bucket>
              <bucket>&quot;cc&quot;</bucket>
              <bucket>&quot;c&quot;</bucket>
              <bucket>&quot;no&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,DAY(time),WEEK(time),WEEKDAY(time))]</column>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,highlight,Unit ,time (Month / Day / Year),DAY(time),WEEK(time),WEEKDAY(time))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137326551072:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' value='#333333' />
            <format attr='font-size' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' value='6' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' />
              <size column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137322684447:qk]' />
              <text column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk] * [sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137326551072:qk])</cols>
      </table>
      <simple-id uuid='{3F72D39F-8955-4391-8205-B1A2A6902F4C}' />
    </worksheet>
    <worksheet name='incl_null'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#8d99ae' fontsize='12'>Actual Temperature</run>
            <run bold='true' fontsize='12'> vs</run>
            <run bold='true' fontcolor='#d88c9a' fontsize='12'> Predicted Temperature</run>
            <run bold='true' fontsize='12'> Hourly</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='9'><![CDATA[Date: <[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137305153538:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data' name='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Convert Unit' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;°C&quot;'>
              <calculation class='tableau' formula='&quot;°C&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n'>
            <column caption='AVG temp by day' datatype='real' name='[Calculation_1119988970994573315]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN &#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN [temperature_2m] END)}&#13;&#10;ELSE&#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN ([temperature_2m]-32)/1.8 END)}&#13;&#10;END' />
            </column>
            <column caption='temp_check_not_null' datatype='boolean' name='[Calculation_1119988971001151498]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_MATCH(STR([temperature_2m]),&apos;[\d+\.\d+|\d+]&apos;)' />
            </column>
            <column caption='color' datatype='string' name='[Calculation_1119988971004014603]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1119988971001151498]= FALSE&#13;&#10;THEN &apos;no&apos;&#13;&#10;ELSE (&#13;&#10;        CASE [Parameters].[Parameter 2]&#13;&#10;        WHEN &apos;°F&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315]&gt;=80 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 70 and [Calculation_1119988970994573315]&lt;80 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 60 and [Calculation_1119988970994573315]&lt;70 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=50 and [Calculation_1119988970994573315]&lt;60 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=40 and [Calculation_1119988970994573315]&lt;50 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=30 and [Calculation_1119988970994573315]&lt;40 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=20 AND [Calculation_1119988970994573315]&lt;30 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        WHEN &apos;°C&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315] &gt;= 26.67 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 21.11 AND [Calculation_1119988970994573315] &lt; 26.67 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 15.56 AND [Calculation_1119988970994573315] &lt; 21.11 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 10 AND [Calculation_1119988970994573315] &lt; 15.56 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 4.44 AND [Calculation_1119988970994573315] &lt; 10 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -1.11 AND [Calculation_1119988970994573315] &lt; 4.44 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -6.67 AND [Calculation_1119988970994573315] &lt; -1.11 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        END&#13;&#10;      )&#13;&#10;END' />
              <aliases>
                <alias key='&quot;c&quot;' value='Freezing' />
                <alias key='&quot;cc&quot;' value='Very Cold' />
                <alias key='&quot;ccc&quot;' value='Chilly' />
                <alias key='&quot;h&quot;' value='Warm' />
                <alias key='&quot;hh&quot;' value='Very Warm' />
                <alias key='&quot;hhh&quot;' value='Hot' />
                <alias key='&quot;n&quot;' value='Neutral Cool' />
                <alias key='&quot;nn&quot;' value='Mild' />
                <alias key='&quot;no&quot;' value='No Data' />
              </aliases>
            </column>
            <column caption='Start End Date' datatype='date' datatype-customized='true' name='[Calculation_926897137305153538]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyyMMdd&quot;, STR(MIN([time (Month / Day / Year)])) ))' />
            </column>
            <column caption='highlight' datatype='string' name='[Calculation_926897137331421217]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;highlight&quot;' />
            </column>
            <column caption='Unit ' datatype='string' name='[Calculation_926897137332920355]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column caption='Actual Temp ' datatype='real' name='[Calculation_926897137335107620]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN [temperature_2m]&#13;&#10;WHEN &apos;°C&apos; THEN ([temperature_2m]-32)/1.8&#13;&#10;END' />
            </column>
            <column caption='Predicted Temp' datatype='real' name='[Calculation_926897137335386149]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN [temp_pred (copy)_1119988970922901505]&#13;&#10;WHEN &apos;°C&apos; THEN ([temp_pred (copy)_1119988970922901505]-32)/1.8&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_926897137332920355]' derivation='None' name='[none:Calculation_926897137332920355:nk]' pivot='key' type='nominal' />
            <column-instance column='[time]' derivation='None' name='[none:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_926897137335107620]' derivation='Sum' name='[sum:Calculation_926897137335107620:qk]' pivot='key' type='quantitative' />
            <column caption='temp_pred_new_test' datatype='real' name='[temp_pred (copy)_1119988970922901505]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;return tabpy.query(&apos;forcast_temperature_new_test&apos;,_arg1)[&apos;response&apos;]&#13;&#10;&quot;,MIN([time]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[temperature_2m]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='integer' name='[time (Month / Day / Year)]' role='dimension' type='ordinal' user:agg-type='MDY' user:base-field='time' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*10000 + DATEPART(&apos;month&apos;, [time])*100 + DATEPART(&apos;day&apos;, [time]))' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[time (Month / Year)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='time' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*100 + DATEPART(&apos;month&apos;, [time]))' />
            </column>
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[time]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
            <column-instance column='[Calculation_926897137305153538]' derivation='User' name='[usr:Calculation_926897137305153538:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_926897137335386149]' derivation='User' name='[usr:Calculation_926897137335386149:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[temp_pred (copy)_1119988970922901505]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[time]' derivation='Weekday' name='[wd:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='Week' name='[wk:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,DAY(time),WEEK(time),WEEKDAY(time))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3943668F9B224BCCBABF43B5A164CCC2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1119988971004014603]' />
              <groupfilter function='level-members' level='[dy:time:ok]' />
              <groupfilter function='level-members' level='[wk:time:ok]' />
              <groupfilter function='level-members' level='[wd:time:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,highlight,Unit ,time (Month / Day / Year),DAY(time),WEEK(time),WEEKDAY(time))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3943668F9B224BCCBABF43B5A164CCC2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1119988971004014603]' />
              <groupfilter function='level-members' level='[Calculation_926897137331421217]' />
              <groupfilter function='level-members' level='[Calculation_926897137332920355]' />
              <groupfilter function='level-members' level='[time (Month / Day / Year)]' />
              <groupfilter function='level-members' level='[dy:time:ok]' />
              <groupfilter function='level-members' level='[wk:time:ok]' />
              <groupfilter function='level-members' level='[wd:time:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]' context='true' filter-group='3'>
            <groupfilter function='member' level='[time (Month / Year)]' member='202501' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]</column>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,DAY(time),WEEK(time),WEEKDAY(time))]</column>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,highlight,Unit ,time (Month / Day / Year),DAY(time),WEEK(time),WEEKDAY(time))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]' value='24' />
            <encoding attr='space' class='0' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk]' scope='rows' value='°C' />
            <format attr='width' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk]' value='60' />
            <format attr='width' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]' value='60' />
            <encoding attr='space' class='0' domain-expand='false' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]' value='212' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]' value='*hh' />
            <format attr='font-size' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]' value='8' />
            <format attr='color' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]' value='#333333' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[:Measure Names]' value='Predicted Temp'>
              <formatted-text>
                <run>Predicted Temp</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[:Measure Names]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137305153538:qk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[:Measure Names]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137305153538:qk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Date:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137305153538:qk]>]]></run>
                <run>&#10;At:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]>:00]]></run>
                <run>&#10;Actual Temp :&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk]><[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[:Measure Names]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137305153538:qk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Date:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137305153538:qk]>]]></run>
                <run>&#10;At:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]>:00]]></run>
                <run>&#10;Predicted Temp:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]><[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk] + [sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk])</rows>
        <cols>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]</cols>
      </table>
      <simple-id uuid='{71AC7011-D172-4849-95AD-E9FBD6F719D0}' />
    </worksheet>
    <worksheet name='not_null'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#d88c9a' fontsize='12'>Predicted Temperature</run>
            <run bold='true' fontcolor='#f79256' fontsize='12'>Æ </run>
            <run bold='true' fontcolor='#000000' fontsize='12'>Hourly</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontsize='9'><![CDATA[Date: <[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137306824707:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_data' name='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Convert Unit' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;°C&quot;'>
              <calculation class='tableau' formula='&quot;°C&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n'>
            <column caption='AVG temp by day' datatype='real' name='[Calculation_1119988970994573315]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN &#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN [temperature_2m] END)}&#13;&#10;ELSE&#13;&#10;{FIXED DATETRUNC(&apos;day&apos;,[time]): AVG(IF [Calculation_1119988971001151498]= TRUE THEN ([temperature_2m]-32)/1.8 END)}&#13;&#10;END' />
            </column>
            <column caption='temp_check_not_null' datatype='boolean' name='[Calculation_1119988971001151498]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REGEXP_MATCH(STR([temperature_2m]),&apos;[\d+\.\d+|\d+]&apos;)' />
            </column>
            <column caption='color' datatype='string' name='[Calculation_1119988971004014603]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1119988971001151498]= FALSE&#13;&#10;THEN &apos;no&apos;&#13;&#10;ELSE (&#13;&#10;        CASE [Parameters].[Parameter 2]&#13;&#10;        WHEN &apos;°F&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315]&gt;=80 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 70 and [Calculation_1119988970994573315]&lt;80 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;= 60 and [Calculation_1119988970994573315]&lt;70 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=50 and [Calculation_1119988970994573315]&lt;60 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=40 and [Calculation_1119988970994573315]&lt;50 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=30 and [Calculation_1119988970994573315]&lt;40 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315]&gt;=20 AND [Calculation_1119988970994573315]&lt;30 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        WHEN &apos;°C&apos; THEN (&#13;&#10;            IF [Calculation_1119988970994573315] &gt;= 26.67 THEN &apos;hhh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 21.11 AND [Calculation_1119988970994573315] &lt; 26.67 THEN &apos;hh&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 15.56 AND [Calculation_1119988970994573315] &lt; 21.11 THEN &apos;h&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 10 AND [Calculation_1119988970994573315] &lt; 15.56 THEN &apos;nn&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= 4.44 AND [Calculation_1119988970994573315] &lt; 10 THEN &apos;n&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -1.11 AND [Calculation_1119988970994573315] &lt; 4.44 THEN &apos;ccc&apos;&#13;&#10;            ELSEIF [Calculation_1119988970994573315] &gt;= -6.67 AND [Calculation_1119988970994573315] &lt; -1.11 THEN &apos;cc&apos;&#13;&#10;            ELSE &apos;c&apos;&#13;&#10;            END&#13;&#10;        )&#13;&#10;        END&#13;&#10;      )&#13;&#10;END' />
              <aliases>
                <alias key='&quot;c&quot;' value='Freezing' />
                <alias key='&quot;cc&quot;' value='Very Cold' />
                <alias key='&quot;ccc&quot;' value='Chilly' />
                <alias key='&quot;h&quot;' value='Warm' />
                <alias key='&quot;hh&quot;' value='Very Warm' />
                <alias key='&quot;hhh&quot;' value='Hot' />
                <alias key='&quot;n&quot;' value='Neutral Cool' />
                <alias key='&quot;nn&quot;' value='Mild' />
                <alias key='&quot;no&quot;' value='No Data' />
              </aliases>
            </column>
            <column caption='Check null/not null' datatype='string' name='[Calculation_926897137295949824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1119988971001151498] THEN &apos;not_null&apos; ELSE &apos;null&apos;END' />
            </column>
            <column caption='Predicted Date' datatype='date' datatype-customized='true' name='[Calculation_926897137306824707]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyyMMdd&quot;, STR(IF [Calculation_926897137295949824] = &apos;null&apos; &#13;&#10;THEN [time (Month / Day / Year)]&#13;&#10;END) ))' />
            </column>
            <column caption='highlight' datatype='string' name='[Calculation_926897137331421217]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;highlight&quot;' />
            </column>
            <column caption='Unit ' datatype='string' name='[Calculation_926897137332920355]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column caption='Predicted Temp' datatype='real' name='[Calculation_926897137335386149]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;°F&apos; THEN [temp_pred (copy)_1119988970922901505]&#13;&#10;WHEN &apos;°C&apos; THEN ([temp_pred (copy)_1119988970922901505]-32)/1.8&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_926897137295949824]' derivation='None' name='[none:Calculation_926897137295949824:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_926897137306824707]' derivation='None' name='[none:Calculation_926897137306824707:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_926897137332920355]' derivation='None' name='[none:Calculation_926897137332920355:nk]' pivot='key' type='nominal' />
            <column-instance column='[time (Month / Day / Year)]' derivation='None' name='[none:time (Month / Day / Year):ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='None' name='[none:time:qk]' pivot='key' type='quantitative' />
            <column caption='temp_pred_new_test' datatype='real' name='[temp_pred (copy)_1119988970922901505]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;return tabpy.query(&apos;forcast_temperature_new_test&apos;,_arg1)[&apos;response&apos;]&#13;&#10;&quot;,MIN([time]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[temperature_2m]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='integer' name='[time (Month / Day / Year)]' role='dimension' type='ordinal' user:agg-type='MDY' user:base-field='time' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*10000 + DATEPART(&apos;month&apos;, [time])*100 + DATEPART(&apos;day&apos;, [time]))' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[time (Month / Year)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='time' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [time])*100 + DATEPART(&apos;month&apos;, [time]))' />
            </column>
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[time]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
            <column-instance column='[Calculation_926897137335386149]' derivation='User' name='[usr:Calculation_926897137335386149:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[temp_pred (copy)_1119988970922901505]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[time]' derivation='Weekday' name='[wd:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='Week' name='[wk:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,DAY(time),WEEK(time),WEEKDAY(time))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3943668F9B224BCCBABF43B5A164CCC2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1119988971004014603]' />
              <groupfilter function='level-members' level='[dy:time:ok]' />
              <groupfilter function='level-members' level='[wk:time:ok]' />
              <groupfilter function='level-members' level='[wd:time:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,highlight,Unit ,time (Month / Day / Year),DAY(time),WEEK(time),WEEKDAY(time))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3943668F9B224BCCBABF43B5A164CCC2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1119988971004014603]' />
              <groupfilter function='level-members' level='[Calculation_926897137331421217]' />
              <groupfilter function='level-members' level='[Calculation_926897137332920355]' />
              <groupfilter function='level-members' level='[time (Month / Day / Year)]' />
              <groupfilter function='level-members' level='[dy:time:ok]' />
              <groupfilter function='level-members' level='[wk:time:ok]' />
              <groupfilter function='level-members' level='[wd:time:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]' context='true' filter-group='3'>
            <groupfilter function='member' level='[time (Month / Year)]' member='202501' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]</column>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,DAY(time),WEEK(time),WEEKDAY(time))]</column>
            <column>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Action (color,highlight,Unit ,time (Month / Day / Year),DAY(time),WEEK(time),WEEKDAY(time))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]' scope='rows' value='°C' />
            <format attr='width' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]' value='48' />
            <encoding attr='space' class='0' domain-expand='false' field='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137295949824:nk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137306824707:qk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[hr:time:ok]' />
              <lod column='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time (Month / Day / Year):ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Date:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time (Month / Day / Year):ok]>]]></run>
                <run>&#10;At:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[hr:time:ok]>:00]]></run>
                <run>&#10;Predicted Temp:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.49375692009925842' />
                <format attr='mark-color' value='#d88c9a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]</rows>
        <cols>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:qk]</cols>
      </table>
      <simple-id uuid='{10CD47F8-ECEC-4D11-9237-BAEDA4FB3353}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Temp Forecast'>
      <style />
      <size maxheight='1000' maxwidth='600' minheight='1000' minwidth='600' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='weather_data' name='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Convert Unit' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;°C&quot;'>
          <calculation class='tableau' formula='&quot;°C&quot;' />
          <members>
            <member value='&quot;°F&quot;' />
            <member value='&quot;°C&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='sqlproxy.06aflty0qioahp10ntb8f0ut0j5n' />
      <zones>
        <zone h='100000' id='1' param='vert' type-v2='layout-flow' w='100000' x='0' y='0'>
          <zone fixed-size='54' forceUpdate='true' h='6200' id='2' is-fixed='true' type-v2='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#000000' fontsize='18'>Temperature Forecast in New York</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='2' h='1000' id='15' is-fixed='true' type-v2='empty' w='100000' x='0' y='6200'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-right' value='80' />
              <format attr='margin-left' value='80' />
              <format attr='padding-right' value='80' />
              <format attr='padding-left' value='80' />
              <format attr='background-color' value='#000000' />
            </zone-style>
          </zone>
          <zone fixed-size='66' h='6600' id='14' is-fixed='true' param='horz' type-v2='layout-flow' w='100000' x='0' y='7200'>
            <zone fixed-size='233' forceUpdate='true' h='5600' id='13' is-fixed='true' type-v2='text' w='40166' x='1667' y='7800'>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontsize='12'>AVG Daily Temperature</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' italic='true'>Click on a day to filter data</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='55' h='5600' id='18' is-fixed='true' mode='compact' param='[Parameters].[Parameter 2]' show-title='false' type-v2='paramctrl' w='10500' x='41833' y='7800'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='margin-top' value='8' />
              </zone-style>
            </zone>
            <zone forceUpdate='true' h='5600' id='19' type-v2='text' w='5333' x='52333' y='7800'>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontsize='12'>in</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='margin-top' value='0' />
                <format attr='padding-bottom' value='12' />
              </zone-style>
            </zone>
            <zone fixed-size='267' h='5600' id='12' is-fixed='true' mode='dropdown' name='Calendar' param='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]' show-title='false' type-v2='filter' values='database' w='40667' x='57666' y='7800'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='margin-top' value='8' />
                <format attr='margin-right' value='4' />
                <format attr='padding-right' value='100' />
              </zone-style>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='padding' value='10' />
              <format attr='padding-top' value='6' />
              <format attr='padding-bottom' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='503' h='50300' id='3' is-fixed='true' name='Calendar' show-title='false' w='100000' x='0' y='13800'>
            <layout-cache type-h='cell' type-w='cell' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
              <format attr='padding' value='10' />
              <format attr='padding-top' value='0' />
              <format attr='padding-bottom' value='0' />
            </zone-style>
          </zone>
          <zone fixed-size='37' h='4500' id='17' is-fixed='true' name='Sheet 7' show-title='false' w='100000' x='0' y='64100'>
            <layout-cache minwidth='901' type-h='fixed' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='padding' value='4' />
              <format attr='padding-right' value='10' />
              <format attr='padding-left' value='10' />
            </zone-style>
          </zone>
          <zone h='28000' id='4' param='horz' type-v2='layout-flow' w='100000' x='0' y='68600'>
            <zone fixed-size='201' h='28400' hidden-by-user='true' id='5' is-fixed='true' name='not_null' w='100000' x='0' y='68200'>
              <layout-cache minheight='194' minwidth='159' type-h='scalable' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='padding' value='10' />
              </zone-style>
            </zone>
            <zone h='28000' id='6' name='incl_null' w='100000' x='0' y='68600'>
              <layout-cache cell-count-w='744' minheight='189' non-cell-size-w='61' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='padding' value='10' />
              </zone-style>
            </zone>
          </zone>
          <zone fixed-size='26' forceUpdate='true' h='3400' id='16' is-fixed='true' type-v2='text' w='100000' x='0' y='96600'>
            <formatted-text>
              <run fontsize='8'>Created by: Le Luu     |     Data: Open-Meteo Weather API     |    Tableau DataDev Hackathon 2025</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <simple-id uuid='{67A92629-12FF-4BB1-87AB-6E5EDB24D8D0}' />
    </dashboard>
  </dashboards>
  <windows source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='46'>
            <card type='columns' />
          </strip>
          <strip size='46'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:day:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:hour:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:month:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:temperature_2m:ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:temperature_2m:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:year:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_410390553196756992:ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA014A93-8471-46E1-ACDA-E6C7D4D38359}' />
    </window>
    <window class='worksheet' name='incl_null'>
      <cards>
        <edge name='left'>
          <strip size='254'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='dropdown' param='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]' type='setMembership' />
            <card pane-specification-id='1' param='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971020165139:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:day:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:hour:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:year:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3A145688-FEF4-4E8B-A332-CAD90E162557}' />
    </window>
    <window class='worksheet' name='Calendar'>
      <cards>
        <edge name='left'>
          <strip size='296'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='47'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card mode='dropdown' param='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]' type='filter' />
            <card pane-specification-id='0' param='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wd:time:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wk:time:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[dy:time:ok]</field>
                  <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]</field>
                  <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137331421217:nk]</field>
                  <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]</field>
                  <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time (Month / Day / Year):ok]</field>
                  <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_1119988970994573315:qk]</field>
                  <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137296936961:qk]</field>
                  <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wd:time:ok]</field>
                  <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wk:time:ok]</field>
                  <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[attr:Calculation_926897137295949824:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8</value>
                <value>&quot;cc&quot;</value>
                <value>&quot;highlight&quot;</value>
                <value>&quot;°C&quot;</value>
                <value>20250108</value>
                <value>-4.5902777777777777</value>
                <value>12.0</value>
                <value>4</value>
                <value>2</value>
                <value>&quot;not_null&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[attr:Calculation_926897137295949824:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[dy:time:ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971001151498:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971016626193:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971020165139:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137295949824:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wd:time:ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[wk:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{47C0C279-D00E-4308-977B-3BDD7AFAB0ED}' />
    </window>
    <window class='worksheet' name='not_null'>
      <cards>
        <edge name='left'>
          <strip size='325'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='47'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[hr:time:ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971016626193:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971020165139:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137295949824:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_926897137332920355:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:temperature_2m:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time (Month / Day / Year):ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[time (Month / Year) Set]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{08E787AE-9F14-4803-92A2-32A69AD97803}' />
    </window>
    <window class='dashboard' maximized='true' name='Temp Forecast'>
      <viewpoints>
        <viewpoint name='Calendar'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 7'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='incl_null'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='not_null'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CA97FC8C-6876-43A0-8838-D881EA693274}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988970994573315:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971001151498:nk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:temperature_2m:ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:temperature_2m:qk]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:time:ok]</field>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_1119988970998919177:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{750A89B6-C86C-4444-A799-1A2023EF8C4E}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B72EAFD9-86E1-4D0F-AAAE-DFA97356A6ED}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[none:Calculation_1119988971004014603:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B517155-9040-447F-B273-55A3C58D153D}' />
    </window>
  </windows>
  <datagraph>
    <graph>
      <properties>
        <default-execution-subgraph-guid value='e4eda526-65e2-4b05-8ffc-df16756a5477' />
      </properties>
      <node-execution-subgraphs>
        <pair execution-subgraph-guid='e4eda526-65e2-4b05-8ffc-df16756a5477' node-guid='f6021540-345b-485d-ba6c-808b0144a500' />
        <pair execution-subgraph-guid='e4eda526-65e2-4b05-8ffc-df16756a5477' node-guid='f1784374-54e6-4944-a4f5-2690a8341fb5' />
        <pair execution-subgraph-guid='e4eda526-65e2-4b05-8ffc-df16756a5477' node-guid='706ea245-4f84-4783-a3de-815329926088' />
        <pair execution-subgraph-guid='e4eda526-65e2-4b05-8ffc-df16756a5477' node-guid='5cdb1027-b09b-4877-ad1e-2c11b4fb782a' />
        <pair execution-subgraph-guid='e4eda526-65e2-4b05-8ffc-df16756a5477' node-guid='d42ecc5b-97d2-461f-ac26-4288c5fe70bf' />
        <pair execution-subgraph-guid='e4eda526-65e2-4b05-8ffc-df16756a5477' node-guid='8b241653-3d6b-438e-b9e8-da35b9c7518d' />
        <pair execution-subgraph-guid='e4eda526-65e2-4b05-8ffc-df16756a5477' node-guid='741a7173-bc48-4668-8d95-c14d7c9efdc1' />
      </node-execution-subgraphs>
      <nodes>
        <dashboard-zone-visibility-node dashboard-identifier='{67A92629-12FF-4BB1-87AB-6E5EDB24D8D0}' node-guid='f6021540-345b-485d-ba6c-808b0144a500' visibility-input-guid='0b5ef051-dc20-49ac-942c-b255566a3a6b' zone-id='6' />
        <dashboard-zone-visibility-node dashboard-identifier='{67A92629-12FF-4BB1-87AB-6E5EDB24D8D0}' node-guid='706ea245-4f84-4783-a3de-815329926088' visibility-input-guid='80b7ae76-1144-443f-8518-ca18ed4c2c67' zone-id='5' />
        <single-value-field-node fieldname='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[Calculation_1119988971016626193]' fieldname-input-guid='f7417dbb-2044-4e46-80dc-e38cd074f896' node-guid='f1784374-54e6-4944-a4f5-2690a8341fb5' value-output-guid='ef2bec6a-fd4a-4d2d-88fe-1924c71e9987' />
        <single-value-field-node fieldname='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[DZV_Not_Null (copy)_1119988971016970258]' fieldname-input-guid='31c65d86-3cac-4f29-88aa-f0dedfdaf00a' node-guid='5cdb1027-b09b-4877-ad1e-2c11b4fb782a' value-output-guid='ea44e585-aa5d-4b86-94ca-264dc72384cf' />
        <single-value-field-node fieldname='[Parameters].[Parameter 2]' fieldname-input-guid='9d19bad6-fc35-4d80-85c2-1d117d87f5c6' node-guid='8b241653-3d6b-438e-b9e8-da35b9c7518d' value-output-guid='fbbc2168-5fab-426a-a525-78e1494405a9' />
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[sum:Calculation_926897137335107620:qk]' node-guid='d42ecc5b-97d2-461f-ac26-4288c5fe70bf' orientation='vertical' sheet-identifier='{71AC7011-D172-4849-95AD-E9FBD6F719D0}' title-input-guid='8a24cb2d-44a7-41b2-9f6e-41a102da0fa5' />
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[sqlproxy.06aflty0qioahp10ntb8f0ut0j5n].[usr:Calculation_926897137335386149:qk]' node-guid='741a7173-bc48-4668-8d95-c14d7c9efdc1' orientation='vertical' sheet-identifier='{10CD47F8-ECEC-4D11-9237-BAEDA4FB3353}' title-input-guid='b83bd394-398b-4fd5-8ca1-4aab43414474' />
      </nodes>
      <edges>
        <edge from='ea44e585-aa5d-4b86-94ca-264dc72384cf' to='80b7ae76-1144-443f-8518-ca18ed4c2c67' />
        <edge from='ef2bec6a-fd4a-4d2d-88fe-1924c71e9987' to='0b5ef051-dc20-49ac-942c-b255566a3a6b' />
        <edge from='fbbc2168-5fab-426a-a525-78e1494405a9' to='8a24cb2d-44a7-41b2-9f6e-41a102da0fa5' />
        <edge from='fbbc2168-5fab-426a-a525-78e1494405a9' to='b83bd394-398b-4fd5-8ca1-4aab43414474' />
      </edges>
      <pin-values />
    </graph>
  </datagraph>
  <thumbnails>
    <thumbnail height='192' name='Calendar' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      PXhbKHgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='44' name='Sheet 7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAsCAYAAAAzWrf+AAAACXBIWXMAABJ0AAASdAHeZh94
      AAAByUlEQVR4nO3cL2iUcRzH8ffGJeNmmKBoGFgsY78ww4liUJTh4PIYBjHNcAzrwyVBcApL
      FuUBRcvBQA7Mz8oYyppBhnisGHSIwSAPO4uIBr3TYz4e3/erPX/Cp7x5nvDwjPV6vR5SUONV
      D5CqZAAKzQAUmgEoNANQaAag0AxAoRmAQjMAhWYACs0AFJoBKDQDUGgGoNAMoJ9uTpZ3fzpV
      5DndX9yu0WIAB6Igy4qqR2gABjCUT2zdXeTc6USqL7DSfkNJQZaadDpNUkokQ/iv1aoeMAp2
      1hqktR9OnFymvQS8vM/D8SbtjRkm9nd5snKHztl7tF6sQgat1pmqJmtABjCA6eU2j5eOfz8u
      8hyAdzslcwszTNQAjtGYP8GD98BkJTP1F3wFGsLUdI3N9W32SuDLax49fcuRw98ufvzAXgll
      WVY5UX0YwDBmr3N1f5VGPZHO3+TVpRtcngSY5cLRnCtzifqtrapX6jfG/CuEIvMJoNAMQKEZ
      gEIzAIVmAArNABSaASg0A1BoA38L9PzQ/EHu0Ii7+PlZ33tun7r2D5b8GZ8ACs0AFJoBKDQD
      UGgGoNAMQKEZgEIzAIVmAArNABSaASg0A1BoXwFVe1aoqUwrpwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Temp Forecast' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='incl_null' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='not_null' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
